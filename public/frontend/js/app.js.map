{"version":3,"sources":["ask.js","question.js","answer.js","feature.js","modal.js","login_modal.js","app.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["(function(){\n    'use strict';\n\n    Vue.component('ask', {\n        template: '#ask-template',\n        data: function() {\n            return {\n                question_text: '',\n                open: false\n            };\n        },\n        props: [ 'user', 'recipient' ],\n        methods: {\n            toggle: function() {\n                this.open = !this.open;\n            },\n            sendQuestion: function() {\n                this.$http.post('/api/question/store',\n                {\n                    recipient_id: this.recipient.id,\n                    asker_id: this.user.id,\n                    question: this.question_text\n                })\n                .then(function (response) {\n                    this.$dispatch('questions-updated', response.data.data);\n                    this.open = false;\n                    this.question_text = '';\n                }, function (response) {\n                    console.log('failed');\n                });\n            }\n        },\n        events: {\n            'question-asked': function() {\n                this.open = false;\n                this.question_text = '';\n            }\n        }\n    });\n\n})();\n","(function(){\n    'use strict';\n\n    Vue.component('question', {\n        template: '#question-template',\n        props: ['question', 'recipient'],\n        data: function() {\n            return {\n                upvoted: false,\n                downvoted: false\n            };\n        },\n        methods: {\n            upvote: function(questionId) {\n                this.upvoted = !this.upvoted;\n                this.downvoted = false;\n\n                this.$http.post('/api/question/upvote', { question_id: questionId }).then(function (response) {\n                    if (!response.data.success) {\n                        this.upvoted = !this.upvoted;\n                    }\n                }, function (response) {\n                    this.upvoted = !this.upvoted;\n                });\n            },\n            downvote: function(questionId) {\n                this.downvoted = !this.downvoted;\n                this.upvoted = false;\n\n                this.$http.post('/api/question/downvote', { question_id: questionId }).then(function (response) {\n                    if (!response.data.success) {\n                        this.downvoted = !this.downvoted;\n                    }\n                }, function (response) {\n                    this.downvoted = !this.downvoted;\n                });\n            }\n        },\n        computed: {\n            votes: function() {\n                if (this.upvoted) {\n                    return this.question.net_votes + 1;\n                } else if (this.downvoted) {\n                    return this.question.net_votes - 1;\n                } else {\n                    return this.question.net_votes;\n                }\n            }\n        }\n    });\n\n})();\n","(function(){\n    'use strict';\n\n    Vue.component('answer', {\n        template: '#answer-template',\n        props: ['answer', 'recipient'],\n        data: function() {\n            return {\n                liked: false\n            };\n        },\n        methods: {\n            like: function(answerId) {\n                this.liked = !this.liked;\n                // GET request\n                this.$http.post('/api/answer/like', { answer_id: answerId }).then(function (response) {\n                    if (!response.data.success) {\n                        this.liked = !this.liked;\n                    }\n                }, function (response) {\n                    this.liked = !this.liked;\n                });\n            }\n        },\n        computed: {\n            votes: function() {\n                if (this.liked) {\n                    return this.answer.net_votes + 1;\n                } else {\n                    return this.answer.net_votes;\n                }\n            }\n        }\n    });\n\n})();\n","(function(){\n    'use strict';\n\n    Vue.component('feature', {\n        template: '#feature-template',\n        props: ['user'],\n        data: function() {\n        },\n        methods: {\n        },\n        computed: {\n            name: function() {\n                return this.user.first_name + ' ' + this.user.last_name;\n            }\n        }\n    });\n\n})();\n","(function(){\n    'use strict';\n\n    Vue.component('modal', {\n        template: '#modal-template',\n        props: ['show', 'onClose'],\n        methods: {\n            close: function () {\n                this.onClose();\n            }\n        },\n        ready: function () {\n            document.addEventListener(\"keydown\", (e) => {\n                if (this.show && e.keyCode == 27) {\n                    this.onClose();\n                }\n            });\n        }\n    });\n\n})();\n","(function(){\n    'use strict';\n\n    Vue.component('loginModal', {\n        template: '#login-modal-template',\n        props: ['show'],\n        data: function () {\n            return {\n    \t        title: '',\n                body: '',\n                login: false,\n                firstName: '',\n                lastName: '',\n                email: '',\n                password: ''\n            };\n        },\n        methods: {\n            close: function () {\n                this.show = false;\n                this.title = '';\n                this.body = '';\n            },\n            toggle: function() {\n                this.login = !this.login;\n            },\n            emailLogin: function () {\n                this.$http.post('/api/login', { email: this.email, password: this.password }).then(function (response) {\n                    if (!response.data.success) {\n                    } else {\n                        this.$dispatch('user-updated', response.data.data);\n                    }\n                }, function (response) {\n                    console.log('failed');\n                });\n                this.close();\n            }\n        }\n    });\n\n})();\n","(function(){\n    'use strict';\n\n    var vm = new Vue({\n        el: '#app',\n        data: {\n            showLoginModal: false,\n            recipient: recipient,\n            questions: questions,\n            loggedIn: loggedIn,\n            user: user\n        },\n        events: {\n            'user-updated': function (user) {\n                this.user = user;\n                this.loggedIn = true;\n            },\n            'questions-updated': function(questions) {\n                this.questions = questions;\n            }\n        }\n    });\n\n})();\n"],"sourceRoot":"/source/"}